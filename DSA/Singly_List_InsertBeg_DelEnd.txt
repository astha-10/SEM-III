#include <stdio.h>
#include <stdlib.h>

// Define the structure for a Node
struct Node {
    int data;
    struct Node* next;
};

// Create a new Node with the given data
struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}

// Linked List structure with a head pointer
struct LinkedList {
    struct Node* head;
};

// Initialize an empty Linked List
void initLinkedList(struct LinkedList* list) {
    list->head = NULL;
}

// Insert a new Node at the beginning of the Linked List
void insertBeginning(struct LinkedList* list, int data) {
    struct Node* newNode = createNode(data);
    newNode->next = list->head;
    list->head = newNode;
}

// Delete the last Node from the Linked List
void deleteEnd(struct LinkedList* list) {
    if (list->head == NULL) {
        printf("The list is empty. Cannot delete from an empty list.\n");
        return;
    }

    if (list->head->next == NULL) {
        free(list->head);
        list->head = NULL;
        return;
    }

    struct Node* current = list->head;
    while (current->next->next != NULL) {
        current = current->next;
    }

    free(current->next);
    current->next = NULL;
}

// Display the elements of the Linked List
void display(struct LinkedList* list) {
    struct Node* current = list->head;
    while (current != NULL) {
        printf("%d -> ", current->data);
        current = current->next;
    }
    printf("NULL\n");
}

int main() {
    struct LinkedList linkedList;
    initLinkedList(&linkedList);

    insertBeginning(&linkedList, 3);
    insertBeginning(&linkedList, 2);
    insertBeginning(&linkedList, 1);

    printf("Initial Linked List:\n");
    display(&linkedList);

    deleteEnd(&linkedList);
    printf("Linked List after deleting the end node:\n");
    display(&linkedList);

    deleteEnd(&linkedList);
    printf("Linked List after deleting the end node:\n");
    display(&linkedList);

    deleteEnd(&linkedList);
    printf("Linked List after deleting the end node:\n");
    display(&linkedList);

    return 0;
}