#include <iostream>

const int MAX_SIZE = 10;  // Maximum size for matrices

// Function to input a matrix
void inputMatrix(int matrix[MAX_SIZE][MAX_SIZE], int rows, int cols) {
    std::cout << "Enter the matrix elements:" << std::endl;
    for (int i = 0; i < rows; ++i) {
        for (int j = 0; j < cols; ++j) {
            std::cout << "Matrix[" << i << "][" << j << "]: ";
            std::cin >> matrix[i][j];
        }
    }
}

// Function to display a matrix
void displayMatrix(int matrix[MAX_SIZE][MAX_SIZE], int rows, int cols) {
    std::cout << "Matrix:" << std::endl;
    for (int i = 0; i < rows; ++i) {
        for (int j = 0; j < cols; ++j) {
            std::cout << matrix[i][j] << " ";
        }
        std::cout << std::endl;
    }
}

// Function to add two matrices
void addMatrices(int result[MAX_SIZE][MAX_SIZE], int matrix1[MAX_SIZE][MAX_SIZE], int matrix2[MAX_SIZE][MAX_SIZE], int rows, int cols) {
    for (int i = 0; i < rows; ++i) {
        for (int j = 0; j < cols; ++j) {
            result[i][j] = matrix1[i][j] + matrix2[i][j];
        }
    }
}

// Function to subtract two matrices
void subtractMatrices(int result[MAX_SIZE][MAX_SIZE], int matrix1[MAX_SIZE][MAX_SIZE], int matrix2[MAX_SIZE][MAX_SIZE], int rows, int cols) {
    for (int i = 0; i < rows; ++i) {
        for (int j = 0; j < cols; ++j) {
            result[i][j] = matrix1[i][j] - matrix2[i][j];
        }
    }
}

// Function to find the sum of all elements of a matrix
int sumOfElements(int matrix[MAX_SIZE][MAX_SIZE], int rows, int cols) {
    int sum = 0;
    for (int i = 0; i < rows; ++i) {
        for (int j = 0; j < cols; ++j) {
            sum += matrix[i][j];
        }
    }
    return sum;
}

int main() {
    int rows, cols;

    std::cout << "Enter the number of rows and columns for matrices (not exceeding " << MAX_SIZE << "): ";
    std::cin >> rows >> cols;

    if (rows > MAX_SIZE || cols > MAX_SIZE) {
        std::cout << "Matrix size exceeds the maximum limit." << std::endl;
        return 1;
    }

    int matrix1[MAX_SIZE][MAX_SIZE], matrix2[MAX_SIZE][MAX_SIZE], result[MAX_SIZE][MAX_SIZE];

    std::cout << "\nEnter Matrix 1:" << std::endl;
    inputMatrix(matrix1, rows, cols);

    std::cout << "\nEnter Matrix 2:" << std::endl;
    inputMatrix(matrix2, rows, cols);

    // Adding matrices
    addMatrices(result, matrix1, matrix2, rows, cols);
    std::cout << "\nSum of Matrices:" << std::endl;
    displayMatrix(result, rows, cols);

    // Subtracting matrices
    subtractMatrices(result, matrix1, matrix2, rows, cols);
    std::cout << "\nDifference of Matrices:" << std::endl;
    displayMatrix(result, rows, cols);

    // Sum of all elements in each matrix
    int sumMatrix1 = sumOfElements(matrix1, rows, cols);
    int sumMatrix2 = sumOfElements(matrix2, rows, cols);

    std::cout << "\nSum of all elements in Matrix 1: " << sumMatrix1 << std::endl;
    std::cout << "Sum of all elements in Matrix 2: " << sumMatrix2 << std::endl;

    return 0;
}
